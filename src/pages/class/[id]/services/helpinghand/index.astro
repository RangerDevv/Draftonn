---
import Layout from "../../../../../layouts/Layout.astro"
import { appwriteDatabases } from "../../../../../lib/backend";
import { Query } from "appwrite";
import { COLLECTION, DB_ID } from "../../../../../lib/ids";
import Createassignment from "../../../../../components/global/createassignment.svelte";
import _ from "lodash"
import Assignmentlist from "../../../../../components/assignmentlist.astro";

let classId = Astro.params.id as string;

let Class = await appwriteDatabases.getDocument(DB_ID, COLLECTION.Classes, classId)

let alist = await appwriteDatabases.listDocuments(DB_ID, COLLECTION.Assignment, [
    Query.equal("Class", classId),
    Query.orderDesc("$createdAt")
]).then(x => x.documents)

let assignments = _.sortBy(_.groupBy(alist, x => new Date(x.created_at!).toDateString()), (x,y) => y)
---

<Layout title="HelpingHand" login={true}>
    <div class="flex flex-col pt-5 min-h-screen w-[100%]">
        <div class="row">
            <div class="col-12">
                <div class="flex flex-row justify-center items-center gap-2">
                    <img class="w-24" src="/HelpingHand.png">
                    <h1 class="text-4xl font-semibold text-center">HelpingHand</h1>
                </div>
                <h2 class="text-2xl font-semibold text-center">{Class.Name}</h2>
                <div class="flex flex-col gap-5 items-center p-12">
                    <Createassignment client:only />
                    {assignments.map((day:any) => (
                        <Assignmentlist day={day} />
                    ))}
                </div>
            </div>
        </div>
    </div>
</Layout>

<style>
</style>
